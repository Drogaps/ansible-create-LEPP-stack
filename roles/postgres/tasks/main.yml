---
- name: Check local dumps and copy dump files to remote host
  template:
    src: templates/all-databases-{{ my_app }}.sql.j2
    dest: /var/lib/postgresql/all-databases-{{ my_app }}.sql
    mode: '0644'
  become: true
  become_user: postgres
  when: dumps == true

- name: Restore databases from dump
  shell: psql -f /var/lib/postgresql/all-databases-{{ my_app }}.sql postgres
  become: true
  become_user: postgres
  when: dumps == true

# Need libs for postgres
- name: Install PostgreSQL, PgBouncer, python3, pip
  ansible.builtin.apt:
    name: "{{ item }}"
    state: latest
    update_cache: yes
  with_items:
     - "postgresql"
     - "pgbouncer"
     - "python3"
     - "python3-pip"

- name: Install psycopg2-binary
  pip:
    name: psycopg2-binary
    state: latest
    executable: pip3

- name: Create PostgreSQL user
  become_user: postgres
  community.postgresql.postgresql_user:
    name: "{{ nuser }}"
    password: "{{ nuser_password }}"
    encrypted: yes
    state: present

- name: Create database
  community.postgresql.postgresql_db:
    name: "{{ database_name }}"
    owner: "{{ nuser }}"
    state: present
  become_user: postgres
  become: true

- name: Configure PgBouncer
  template:
    src: pgbouncer.ini.j2
    dest: /etc/pgbouncer/pgbouncer.ini
  notify:
    - restart pgbouncer

- name: Configure PgBouncer userlist
  template:
    src: userlist.txt.j2
    dest: /etc/pgbouncer/userlist.txt
  notify:
    - restart pgbouncer