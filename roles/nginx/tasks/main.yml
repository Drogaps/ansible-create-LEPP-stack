---
- name: Install Nginx package
  ansible.builtin.apt:
    name: nginx
    state: latest
    update_cache: yes

- name: Remove default Nginx configuration
  ansible.builtin.file:
    path: "{{ item }}"
    state: absent
  with_items:
    - /etc/nginx/sites-available/default
    - /etc/nginx/sites-enabled/default

- name: Copy project Nginx configuration
  ansible.builtin.template:
    src: server.conf.j2
    dest: /etc/nginx/sites-available/{{ my_app }}.conf
    mode: '0644'

- name: Create symlink to Nginx configuration directory
  ansible.builtin.file:
    src: /etc/nginx/sites-available/{{ my_app }}.conf
    dest: /etc/nginx/sites-enabled/{{ my_app }}.conf
    state: link

#Create A record dns
- name: Create A record for {{ server_n }}.<domain>.ru in Cloudflare
  community.general.cloudflare_dns:
    zone: <domain>.ru
    record: "{{ server_n }}"
    ttl: 60
    proxied: false
    type: A
    value: "{{ groups['devstage'][0] }}"
    api_token: "{{ cloudflare_token }}"


# SSL for you nginx  config
- name: Install core for certbot
  snap:
    name: core
    state: present

- name: Refresh Core snap
  shell: snap refresh core
  become: yes

- name: Install Certbot
  snap:
    name: certbot
    classic: yes

- name: Create symbolic link for Certbot
  ansible.builtin.file:
    src: /snap/bin/certbot
    dest: /usr/bin/certbot
    state: link
    force: yes

- name: Check if SSL certificate is installed
  ansible.builtin.stat:
    path: /etc/letsencrypt/live/{{ server_n }}.ltst.ru/fullchain.pem
  register: cert_exists
  notify:
    - restart nginx

- name: Obtain and install SSL certificate with Certbot
  shell: certbot --nginx --agree-tos --no-eff-email --email {{ smail }} -d {{ server_n }}.ltst.ru
  when: not cert_exists.stat.exists
  notify:
    - restart nginx


